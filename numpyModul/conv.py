# 移动平均值和数组卷积
import numpy as np


def auto_conv():
    N=5
    a = np.arange(1,11) #样本
    # b = np.ones(N)/N # 卷积核
    b = np.array([1,2,3,4,5])/15 #权重
    # c = np.convolve(a, b, 'valid') #此为错误计算方法
    # c= [ 2.33333333  3.33333333  4.33333333  5.33333333  6.33333333  7.33333333] 答案不正确

    c = np.convolve(a,b[::-1],'valid')
    print(a,b,c, sep='\n')

    # 计算过程:对第一个样本数组 a = [1,2,3,4,5] ,  权重数组: b = np.array([1,2,3,4,5])/15
    #卷积数组 c = a*b =    array([ 0.06666667,  0.26666667,  0.6       ,  1.06666667,  1.66666667]),
    # c.sum() 为 3.6666666666666665  此为卷积的第一个数,
    # 原因是在convolve算法中将b 反转再乘以a,所以需要将b再次反转来抵消convolve算法中的反转, 即 c = a*b[::-1] 得到正确答案
    #c = [ 3.66666667  4.66666667  5.66666667  6.66666667  7.66666667  8.66666667]
auto_conv()